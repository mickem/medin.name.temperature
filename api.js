!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("homey")):"function"==typeof define&&define.amd?define(["homey"],t):"object"==typeof exports?exports.library=t(require("homey")):e.library=t(e.homey)}(global,(function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(r(1));function a(e,t,r){return e.capabilitiesObj&&e.capabilitiesObj[t]&&e.capabilitiesObj[t].value?e.capabilitiesObj[t].value:r}e.exports=[{description:"Retrieve all devices with their information",fn:(e,t)=>{o.default.app.get().getDevices().then(e=>{const r=Object.values(e).filter(e=>e.capabilitiesObj&&Object.keys(e.capabilitiesObj).includes("measure_temperature")).map(e=>({battery:a(e,"measure_battery","?"),icon:e.iconObj.url,id:e.id,name:e.name,temperature:a(e,"measure_temperature","?"),zone:e.zone,zoneName:e.zoneName})).sort((e,t)=>e.zoneName===t.zoneName?e.name.localeCompare(t.name):e.zoneName.localeCompare(t.zoneName));t(null,r)}).catch(e=>t(e,null))},method:"GET",path:"/devices"},{description:"Retrieve all zones with their information",fn:(e,t)=>{t(null,Object.values(o.default.app.get().getZones()).filter(e=>e.hasDevice()).map(e=>({id:e.getId(),max:e.periodTemp.maxValue,min:e.periodTemp.minValue,name:e.getName(),temperature:e.getCurrentAvg()})).sort((e,t)=>e.name.localeCompare(t.name)))},method:"GET",path:"/zones"},{description:"Retrieve logs",fn:(e,t)=>{t(null,o.default.app.get().getLogs().map(e=>({date:e.date.toISOString(),level:e.level,message:e.message})))},method:"GET",path:"/logs"}]},function(t,r){t.exports=e}])}));